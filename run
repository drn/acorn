#!/bin/bash -eux

# ensure ~/downloads structure
mkdir -p ~/downloads
mkdir -p ~/downloads/blackhole
mkdir -p ~/downloads/movies
mkdir -p ~/downloads/pre-processed-tv
mkdir -p ~/downloads/safe
mkdir -p ~/downloads/tv
mkdir -p ~/downloads/torrents
mkdir -p ~/downloads/torrents/blackhole
mkdir -p ~/downloads/torrents/movies
mkdir -p ~/downloads/torrents/pre-processed-tv
mkdir -p ~/downloads/torrents/safe
mkdir -p ~/downloads/torrents/tv

# ensure ~/private/rtorrent structure
mkdir -p ~/private/rtorrent/data/blackhole
mkdir -p ~/private/rtorrent/data/movies
mkdir -p ~/private/rtorrent/data/pre-processed-tv
mkdir -p ~/private/rtorrent/data/safe
mkdir -p ~/private/rtorrent/data/tv

# ensure ~/.bash_*
cp -f ~/.acorn/profile ~/.bash_profile
cp -f ~/.acorn/aliases ~/.bash_aliases
cp -f ~/.acorn/gitconfig ~/.gitconfig

# ensure ~/rtorrent symlink exists
ln -sf ~/private/rtorrent ~

# ensure rtorrent version
echo -n '0.9.6_w0.13.6' > ~/private/rtorrent/.version

# ensure rtorrent.rc
cat ~/.acorn/rtorrent | \
  sed -re "s:/home/USERNAME:$HOME:" > \
  ~/.rtorrent.rc

# ensure rutorrent config.php
cd ~/www/*/public_html/rutorrent/conf/users
mkdir -p "$(whoami)"
cp ~/.acorn/rutorrent "$(whoami)/config.php"

# ensure ~/src directory exists
mkdir -p ~/src

# install go
version="$(~/src/go/bin/go version 2>/dev/null || true)"
if [[ "$version" == "go version go1.14 linux/amd64" ]]; then
  echo "go already installed"
  echo "  $version"
else
  mkdir -p ~/tmp
  wget https://dl.google.com/go/go1.14.linux-amd64.tar.gz \
    -O ~/tmp/go.tar.gz
  tar -xvf ~/tmp/go.tar.gz -C ~/tmp
  rm -rf ~/src/go
  mv ~/tmp/go ~/src
  rm -rf ~/tmp
  version="$(~/src/go/bin/go version 2>/dev/null)"
  if [[ "$version" != "go version go1.14 linux/amd64" ]]; then
    echo "go installation failed"
    echo "  $version"
    exit 0
  fi
fi

# install python 3.6
version="$(~/src/python3/python --version 2>/dev/null || true)"
if [[ "$version" == "Python 3.6.3" ]]; then
  echo "python already installed"
  echo "  $version"
else
  mkdir -p ~/tmp
  wget https://www.python.org/ftp/python/3.6.3/Python-3.6.3.tgz \
    -O ~/tmp/python.tar.gz
  tar -xvf ~/tmp/python.tar.gz -C ~/tmp
  rm -rf ~/src/python3
  mv ~/tmp/Python-3.6.3 ~/src/python3
  rm -rf ~/tmp
  cd ~/src/python3
  ./configure
  make
  version="$(~/src/python3/python --version 2>/dev/null)"
  if [[ "$version" != "Python 3.6.3" ]]; then
    echo "python installation failed"
    echo "  $version"
    exit 0
  fi
fi

# install pip for python 3.6
version="$(~/src/python3/python -m pip --version 2>/dev/null || true)"
if [[ "$version" == "pip 20.2.3"* ]]; then
  echo "pip already installed"
  echo "  $version"
else
  wget -qO- https://bootstrap.pypa.io/get-pip.py | ~/src/python3/python
  version="$(~/src/python3/python -m pip --version 2>/dev/null)"
  if [[ "$version" != "pip 21.1.3"* ]]; then
    echo "pip installation failed"
    echo "  $version"
    exit 0
  fi
fi

# upgrade pip and install virtualenv
~/src/python3/python -m pip install --upgrade virtualenv pip

# configure ~/bin
mkdir -p ~/bin
cp ~/.acorn/sickchill ~/bin/sickchill

# install sickchill and dependencies
git clone https://github.com/SickChill/SickChill.git ~/SickChill 2>/dev/null \
  || true
cd ~/SickChill
git fetch
git reset --hard origin/master
~/src/python3/python -m pip install --upgrade sickchill pyopenssl

# initial sickchill configuration
if [ ! -d ~/.SickChill.tv.shows ]; then
  # boot sickchill to setup initial files
  ~/src/python3/python ~/SickChill/SickChill.py -d \
    --pidfile="$HOME/SickChill/SickChill.pid"
  pkill -9 -fu "$(whoami)" 'SickChill/SickChill.py'
  rm -rf ~/SickChill/SickChill.pid && sleep 10

  # generate ~/.SickChill.tv.shows
  mkdir ~/.SickChill.tv.shows
  sed -ri 's|web_port = (.*)|web_port = '"$(shuf -i 10001-32001 -n 1)"'|g' \
    ~/SickChill/config.ini
  sed -ri 's|web_root = (.*)|web_root = /'"$(whoami)"'/sickchill|g' \
    ~/SickChill/config.ini
  sed -ri 's|launch_browser = 1|launch_browser = 0|g' \
    ~/SickChill/config.ini
  sed -ri 's#root_dirs = (.*)#root_dirs = '"$HOME"'/.SickChill.tv.shows#g' \
    ~/SickChill/config.ini
fi
